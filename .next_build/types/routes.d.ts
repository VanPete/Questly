// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/daily" | "/leaderboard" | "/login" | "/profile" | "/topic/[id]" | "/upgrade"
type AppRouteHandlerRoutes = "/api/admin/rotate-daily" | "/api/admin/snapshot-leaderboard" | "/api/chat" | "/api/conversations" | "/api/daily" | "/api/leaderboard/daily" | "/api/leaderboard/lifetime" | "/api/leaderboard/streaks" | "/api/messages" | "/api/plan-tasks" | "/api/plans" | "/api/profile" | "/api/progress" | "/api/quest-number" | "/api/questions/generate" | "/api/quiz" | "/api/stripe/checkout" | "/api/stripe/portal" | "/api/stripe/webhook" | "/api/subscription" | "/api/topics"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/admin/rotate-daily": {}
  "/api/admin/snapshot-leaderboard": {}
  "/api/chat": {}
  "/api/conversations": {}
  "/api/daily": {}
  "/api/leaderboard/daily": {}
  "/api/leaderboard/lifetime": {}
  "/api/leaderboard/streaks": {}
  "/api/messages": {}
  "/api/plan-tasks": {}
  "/api/plans": {}
  "/api/profile": {}
  "/api/progress": {}
  "/api/quest-number": {}
  "/api/questions/generate": {}
  "/api/quiz": {}
  "/api/stripe/checkout": {}
  "/api/stripe/portal": {}
  "/api/stripe/webhook": {}
  "/api/subscription": {}
  "/api/topics": {}
  "/daily": {}
  "/leaderboard": {}
  "/login": {}
  "/profile": {}
  "/topic/[id]": { "id": string; }
  "/upgrade": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
