Questly Roadmap - Shift to Daily Quests model
Date: 2025-08-24
Owner: TBD
Status Legend: [ ] Planned  [~] In Progress  [x] Done  [!] Blocked

0) North Star
- 3 Topics. 3 Quests. Test your mind. Free daily play with a clean loop (learn -> quiz -> review -> chat). Premium unlocks more topics, unlimited chat/history, and streak insurance.

1) Title / Entry Screen (Landing)
Goals
- Wordle-like title screen with immediate CTA.
- Let logged-out users play, nudge sign-in for streaks/points/history.
Checklist
[ ] New route: / (server component) renders Title Screen
[ ] Logo + tagline: "3 Topics. 3 Quests. Test your mind."
[ ] Buttons: [Play Today’s 3], [Login / Sign Up], [Leaderboard]
[ ] If logged out: small nudge message to sign in (non-blocking)
[ ] Simple, bold, clean layout (centered wordmark + big Play button)
[ ] Add basic Leaderboard page link (read-only initially)
Acceptance
- Landing loads fast, clearly shows 3-CTA layout, Play leads to /daily.

2) Daily Topics Structure
Goals
- 3 global topics/day (Beginner, Intermediate, Advanced) for everyone.
- Premium: 6/day (2 per difficulty).
- Rotate daily at 00:00 UTC.
Checklist
[ ] Supabase table daily_topics (one row/day): date, beginner_id, intermediate_id, advanced_id, premium_extra_ids
[ ] Cron at midnight UTC to select topics and upsert daily_topics
[ ] /api/daily reads daily_topics; if missing, fallback seed
[ ] Premium users see 6 tiles; free see 3
[ ] Completion rules: any one locks streak; all 3 grants bonus
Acceptance
- /daily shows 3 (or 6 if premium) consistent topics for all users that day; rollover at UTC midnight.

3) Game Loop (Topic -> Quiz -> Learn -> Chat)
Goals
- Short intro -> 1 quick question -> 5-question mini quiz -> summary -> optional chat.
- Award points and give immediate feedback.
Checklist
[ ] Topic detail screen supports flow states: intro -> quick Q -> quiz -> summary -> chat CTA
[ ] Quick Question: 1 MCQ (4 options), immediate feedback
[ ] Mini Quiz: 5 MCQs, scoring per answer
[ ] Summary & Review: score, correct answers, key facts
[ ] "Chat to Explore More" CTA; Free: limit to 3-5 messages; Premium: unlimited
[ ] Persist attempt + answers (quiz_attempts, quiz_answers); link to user_progress
Acceptance
- Users can complete a topic end-to-end with points and see a clear review screen; chat opens gated by plan.

4) Points, Streaks & Leaderboards
Goals
- Clear, fair point economy; visible progress and competition.
- Streak multiplier with cap.
Checklist
[ ] Points per correct answer = 10
[ ] All 3 topics complete bonus = +50
[ ] Streak multiplier: +10% per consecutive day, cap at 2x
[ ] Track per-day and lifetime totals
[ ] Daily leaderboard (resets each day)
[ ] Lifetime leaderboard (premium access)
[ ] Weekly streak stats (longest streaks)
[ ] Shareable grid like Wordle (emoji summary string)
Acceptance
- After completion, users see points earned, streak updates, and can view daily leaderboard; share grid copies to clipboard.

5) Free vs Premium (Gating)
Goals
- Free is fun and sticky; Premium is compelling.
Checklist
[ ] Free: 3 topics/day, post-quiz chat limited (3-5 exchanges), basic daily leaderboard
[ ] Premium: 6 topics/day, unlimited chat & quiz history, saved conversations, streak insurance, lifetime leaderboard access
[ ] Stripe integration for checkout and billing portal
[ ] user_subscriptions table synced from Stripe webhook
[ ] Gating logic in UI + server routes based on subscription state
[ ] Streak insurance: missed day will not break streak for premium (1-day grace)
Acceptance
- Upgrading unlocks features immediately; gating consistent across UI and APIs.

6) Database (Supabase)
New/Updated Tables (high-level)
- daily_topics: { id, date (unique), beginner_id, intermediate_id, advanced_id, premium_extra_ids jsonb, created_at }
- user_progress: { id, user_id, date, topic_id, quick_correct bool, quiz_score int, quiz_total int, completed bool, created_at }
- user_points: { user_id (pk), total_points int, streak int, longest_streak int, last_active_date date, updated_at }
- leaderboard_daily: { date, user_id, points, rank, snapshot_at } (precomputed)
- user_subscriptions: { user_id (pk), plan enum('free','premium'), stripe_customer_id, current_period_end, status, updated_at }
- conversations/messages: already present (premium: unlimited history)
Indexes & Policies
[ ] RLS per-user for user_progress, user_points, user_subscriptions
[ ] Unique(date) on daily_topics
[ ] Composite index on user_progress (user_id, date) and (user_id, topic_id)
[ ] leaderboard_daily read-only to everyone
Cron/Functions
[ ] Nightly job to populate daily_topics
[ ] Job to compute leaderboard_daily at end-of-day UTC
[ ] Triggers or workers to update user_points totals after quiz submission

7) Implementation Flow
Sprint 1 - Game Loop MVP
[x] /daily page with today’s topics from daily_topics (fallback to seeds)
[~] Topic flow UI (intro -> quick -> quiz -> summary)
[x] /api/quiz to score attempts (record quiz_attempts/answers)
[x] /api/progress to upsert user_progress and award points
[x] Update header streak badge from profiles/user_points (single source)
[x] Nightly rotation cron (00:00 UTC) calling /api/admin/rotate-daily (GET)
[x] Cache generated questions per topic/day (in-memory) to reduce OpenAI calls
Acceptance: End-to-end topic completion with persisted results and points; streak locks when any topic completed.

Sprint 2 - Streaks + Leaderboards
[ ] Implement streak multiplier logic in points calculation (cap 2x) — server in place; polish UI badges
[ ] /api/leaderboard/daily (points for today), public read
[ ] /api/leaderboard/lifetime (premium only)
[ ] Update "Quest Complete" screen: badges for streak + score
[ ] Compute leaderboard_daily snapshot cron at 23:59 UTC
Acceptance: Daily leaderboard visible and accurate; streaks reflected with multiplier; badges shown.

Sprint 3 - Premium + Sharing
[ ] Stripe checkout + customer portal
[ ] Webhooks to sync user_subscriptions
[ ] UI gating for 6 topics/day, unlimited chat/history
[ ] Streak insurance grace for premium (1 missed day will not reset)
[ ] Share Result: generate emoji grid and copy-to-clipboard
Acceptance: Premium upgrade toggles features; share grid string matches today’s outcomes.

8) APIs (to add/extend)
- GET /api/daily -> today’s topics (reads daily_topics; handles premium)
- POST /api/quiz -> create attempt + answers, returns score/total [exists: extend as needed]
- POST /api/progress -> upsert user_progress, update user_points (totals, streak)
- GET /api/leaderboard/daily?date=YYYY-MM-DD -> list top scorers
- GET /api/leaderboard/lifetime -> list top lifetime totals (premium only)
- GET /api/profile -> streak/points overview [exists: extend]
- POST /api/stripe/checkout, POST /api/stripe/webhook -> billing

9) Gating Rules (summary)
- Free: 3 daily topics visible; chat limit 3-5 messages per topic after quiz; daily leaderboard visible
- Premium: 6 topics; unlimited chat & history; lifetime leaderboard; streak insurance
- Enforce both client-side and server-side (RLS checks on data, subscription checks in route handlers)

10) Shareable Grid Spec (example)
Format: "Questly Aug 24: Beginner [green] Intermediate [yellow] Advanced [white] - Streak 6"
Legend: green correct (completed with good score), yellow partial (attempted but below threshold), white skipped
[ ] Define thresholds (e.g., partial if <60% correct)
[ ] Implement generator util and UI on summary screen

11) Non-Functional
[ ] Analytics events: play_click, quickq_answered, quiz_completed, chat_opened, share_copied, upgrade_clicked
[ ] CI: lint + build on PR; add test scaffolding for core utils
[ ] Perf: keep landing and /daily under ~100KB JS first-load where possible
[ ] Accessibility: focus order, contrast, keyboard support for quiz
[ ] Dark Mode toggle

12) Dependencies & Risks
- Stripe account and keys (test + prod)
- Cron: Vercel Cron or Supabase Scheduled Functions
- Topic inventory/quality: ensure enough topics for rotation
- RLS correctness for points/subscriptions

13) Immediate Next Steps (Tactical)
[ ] Create daily_topics, user_progress, user_points, leaderboard_daily, user_subscriptions tables + RLS
[ ] Implement /daily page + API backed by daily_topics
[ ] Extend /api/quiz to produce per-answer scoring details needed by summary
[ ] Implement /api/progress to consolidate points + streak updates (replace ad-hoc streak)
[ ] Basic Leaderboard page (wired to daily endpoint)
[ ] Persist question-generation cache in KV/DB (e.g., Vercel KV or Supabase table) with date+topic key
[ ] Add CRON_SECRET in prod and disable user-triggered rotation (cron/secret only)

Notes
- Use UTC everywhere for daily rollover. Store dates as DATE not TIMESTAMP for daily keys.
- For premium grace day, store last_active_date and a grace_used flag per period.
- Consider server-side rendering for /daily to ensure consistency and fast TTFB.
